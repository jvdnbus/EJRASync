<Window x:Class="EJRASync.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EJRASync.UI"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="EJRA Sync Manager" Height="800" Width="1400" MinHeight="700" MinWidth="1000"
        Background="#1E1E1E">
    <Window.Resources>
        <!-- Value converters for UI state -->
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <local:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter"/>
        <local:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
        <local:ContextMenuVisibilityConverter x:Key="ContextMenuVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Context Menu Icon Style -->
        <Style x:Key="ContextMenuIconStyle" TargetType="Image">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
        </Style>

        <!-- Context Menu Style -->
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#2D2D30" CornerRadius="3,3,3,3" BorderBrush="#3E3E42" BorderThickness="2" Opacity="0.96">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>    

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
        </ControlTemplate>
        
        <!-- Define the context menu as a resource -->
        <ContextMenu x:Key="RemoteFileContextMenu"  Background="#2D2D30" BorderBrush="#3E3E42">
            <MenuItem Header="Tag as Active" 
                     Command="{Binding RemoteFiles.TagAsActiveCommand}"
                     CommandParameter="{Binding RemoteFiles.SelectedFile}"
                     Background="#2D2D30"
                     Foreground="#F0F0F0"
                     IsEnabled="{Binding HasWriteAccess}">
                <MenuItem.Icon>
                    <Image Source="/Assets/Icons/check-square.png" Style="{StaticResource ContextMenuIconStyle}"/>
                </MenuItem.Icon>
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsDirectory}" Value="True"/>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsActive}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsDirectory}" Value="True"/>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsActive}" Value="{x:Null}"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem Header="Tag as Inactive" 
                     Command="{Binding RemoteFiles.TagAsActiveCommand}"
                     CommandParameter="{Binding RemoteFiles.SelectedFile}"
                     Background="#2D2D30"
                     Foreground="#F0F0F0"
                     IsEnabled="{Binding HasWriteAccess}">
                <MenuItem.Icon>
                    <Image Source="/Assets/Icons/subtract-square.png" Style="{StaticResource ContextMenuIconStyle}"/>
                </MenuItem.Icon>
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsDirectory}" Value="True"/>
                                    <Condition Binding="{Binding RemoteFiles.SelectedFile.IsActive}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Delete" 
                     Command="{Binding RemoteFiles.DeleteRemoteFileCommand}"
                     CommandParameter="{Binding RemoteFiles.SelectedFile}"
                     Background="#2D2D30"
                     Foreground="#F0F0F0"
                     IsEnabled="{Binding HasWriteAccess}">
                <MenuItem.Icon>
                    <Image Source="/Assets/Icons/delete.png" Style="{StaticResource ContextMenuIconStyle}"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        
        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="#F0F0F0"/>
            <Setter Property="BorderBrush" Value="#3E3E42"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3E3E42"/>
                                <Setter Property="BorderBrush" Value="#555"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#555"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#252526"/>
                                <Setter Property="Foreground" Value="#6A6A6A"/>
                                <Setter Property="BorderBrush" Value="#333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="#F0F0F0"/>
            <Setter Property="BorderBrush" Value="#3E3E42"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Focusable="False"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#555"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#007ACC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Top bar -->
            <RowDefinition Height="Auto"/> <!-- Path navigation -->
            <RowDefinition Height="*"/>    <!-- File panes -->
            <RowDefinition Height="Auto"/> <!-- Action buttons -->
            <RowDefinition Height="Auto"/> <!-- Status bar -->
        </Grid.RowDefinitions>

        <!-- Top Bar -->
        <Border Grid.Row="0" Background="#2D2D30" BorderBrush="#3E3E42" BorderThickness="0,0,0,1">
            <Grid Margin="20,12">
                <Button Command="{Binding ScanChangesCommand}" 
                        Style="{StaticResource ModernButtonStyle}"
                        HorizontalAlignment="Left"
                        Margin="0,0,12,0">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Assets/Icons/search.png" Width="16" Height="16" Margin="0,0,8,0"/>
                        <TextBlock Text="Scan Changes" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button IsEnabled="False" 
                            Style="{StaticResource ModernButtonStyle}"
                            Margin="0,0,12,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Assets/Icons/github.png" Width="16" Height="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Release" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    <!-- User Profile / Login -->
                    <Grid VerticalAlignment="Center">
                        <!-- Login Button (when not logged in) -->
                        <Button Command="{Binding LoginCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Assets/Icons/user.png" Width="16" Height="16" Margin="0,0,8,0"/>
                                <TextBlock Text="Login" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        
                        <!-- User Profile Chip (when logged in) -->
                        <Button Visibility="{Binding IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                                    <Setter Property="Padding" Value="16,4"/>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal">
                                <!-- Profile Image -->
                                <Border Width="24" Height="24" 
                                        CornerRadius="12" 
                                        Background="#555"
                                        Margin="0,0,8,0">
                                    <Grid>
                                        <!-- Default user icon when no profile image -->
                                        <Image Source="/Assets/Icons/user.png" 
                                               Width="14" Height="14"
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"
                                               Opacity="0.7"/>
                                        <!-- Actual profile image when available -->
                                        <Image Source="{Binding UserProfileImageUrl}"
                                               Width="24" Height="24"
                                               Stretch="UniformToFill"
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center">
                                            <Image.Clip>
                                                <EllipseGeometry RadiusX="12" RadiusY="12" Center="12,12"/>
                                            </Image.Clip>
                                        </Image>
                                    </Grid>
                                </Border>
                                
                                <!-- User Info -->
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock Text="{Binding UserDisplayName}" 
                                               FontSize="13" 
                                               FontWeight="SemiBold"
                                               Foreground="#F0F0F0"
                                               Margin="0,0,0,1"/>
                                    <TextBlock Text="{Binding UserProviderName}" 
                                               FontSize="11" 
                                               Foreground="#AAAAAA"/>
                                </StackPanel>
                                
                                <!-- Logout Button -->
                                <Button Command="{Binding LogoutCommand}"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Padding="4"
                                        Margin="8,0,0,0"
                                        ToolTip="Logout">
                                    <Image Source="/Assets/Icons/logout.png" Width="14" Height="14" Opacity="0.7"/>
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="10"
                                                                Padding="{TemplateBinding Padding}">
                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="#3E3E42"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" Value="#555"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Path Navigation Bars -->
        <Border Grid.Row="1" Background="#252526" BorderBrush="#3E3E42" BorderThickness="0,0,0,1">
            <Grid Margin="20,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="12"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Labels -->
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Local Directory" 
                           FontWeight="SemiBold" FontSize="13" Foreground="#CCCCCC" Margin="4,0"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Remote Storage" 
                           FontWeight="SemiBold" FontSize="13" Foreground="#CCCCCC" Margin="4,0"/>
                
                <!-- Path TextBoxes -->
                <TextBox Grid.Row="2" Grid.Column="0" 
                         Text="{Binding NavigationContext.LocalCurrentPath, Mode=OneWay}" 
                         IsReadOnly="True" 
                         Style="{StaticResource ModernTextBoxStyle}"/>
                
                <TextBox Grid.Row="2" Grid.Column="2" 
                         Text="{Binding RemoteFiles.CurrentPath, Mode=OneWay}" 
                         IsReadOnly="True" 
                         Style="{StaticResource ModernTextBoxStyle}"/>
            </Grid>
        </Border>

        <!-- File Panes -->
        <Grid Grid.Row="2" Margin="20,16,20,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Local File List -->
            <Border Grid.Column="0" Background="#1E1E1E" BorderBrush="#3E3E42" BorderThickness="0,1,0,0" CornerRadius="5,5,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Header -->

                    <!-- File list -->
                    <DataGrid Grid.Row="1" 
                             ItemsSource="{Binding LocalFiles.Files}"
                             SelectedItem="{Binding LocalFiles.SelectedFile}"
                             AutoGenerateColumns="False"
                             GridLinesVisibility="None"
                             HeadersVisibility="Column"
                             SelectionMode="Single"
                             CanUserAddRows="False"
                             CanUserDeleteRows="False"
                             CanUserReorderColumns="False"
                             CanUserResizeRows="False"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.CanContentScroll="False"
                             IsEnabled="{Binding LocalFiles.IsLoading, Converter={StaticResource InverseBooleanConverter}}"
                             Opacity="{Binding LocalFiles.IsLoading, Converter={StaticResource BooleanToOpacityConverter}}"
                             Background="#1E1E1E"
                             BorderThickness="0"
                             RowHeight="24"
                             FontSize="13"
                             Margin="0,0,0,4" ColumnHeaderHeight="30">
                        
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="#2D2D30"/>
                                <Setter Property="Foreground" Value="#F0F0F0"/>
                                <Setter Property="BorderBrush" Value="#3E3E42"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="Padding" Value="8,6"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#F0F0F0"/>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="#1E1E1E"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#094771"/>
                                        <Setter Property="BorderBrush" Value="#007ACC"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#2A2D2E"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#1177BB"/>
                                        <Setter Property="BorderBrush" Value="#007ACC"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.ContextMenu>
                            <ContextMenu  Background="#2D2D30" BorderBrush="#3E3E42">
                                <MenuItem Header="Compress &amp; upload" 
                                         Command="{Binding LocalFiles.CompressAndUploadCommand}"
                                         CommandParameter="{Binding LocalFiles.SelectedFile}"
                                         Background="#2D2D30"
                                         Foreground="#F0F0F0"
                                         IsEnabled="{Binding HasWriteAccess}">
                                    <MenuItem.Icon>
                                        <Image Source="/Assets/Icons/upload-box.png" Style="{StaticResource ContextMenuIconStyle}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Raw upload" 
                                         Command="{Binding LocalFiles.RawUploadCommand}"
                                         CommandParameter="{Binding LocalFiles.SelectedFile}"
                                         Background="#2D2D30"
                                         Foreground="#F0F0F0"
                                         IsEnabled="{Binding HasWriteAccess}">
                                    <MenuItem.Icon>
                                        <Image Source="/Assets/Icons/upload-file.png" Style="{StaticResource ContextMenuIconStyle}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator Background="#3E3E42"/>
                                <MenuItem Header="Show in Explorer" 
                                         Command="{Binding LocalFiles.ViewInExplorerCommand}"
                                         CommandParameter="{Binding LocalFiles.SelectedFile}"
                                         Background="#2D2D30"
                                         Foreground="#F0F0F0">
                                    <MenuItem.Icon>
                                        <Image Source="/Assets/Icons/folder.png" Style="{StaticResource ContextMenuIconStyle}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                         Command="{Binding LocalFiles.NavigateToCommand}"
                                         CommandParameter="{Binding LocalFiles.SelectedFile}"/>
                        </DataGrid.InputBindings>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Size" Binding="{Binding DisplaySize}" Width="80" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Modified" Binding="{Binding LastModified, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy-MM-dd HH:mm'}" Width="130" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>

            <!-- Remote File List -->
            <Border Grid.Column="2" Background="#1E1E1E" BorderBrush="#3E3E42" BorderThickness="0,1,0,0" CornerRadius="5,5,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Header -->

                    <!-- File list -->
                    <DataGrid Grid.Row="1" 
                             ItemsSource="{Binding RemoteFiles.Files}"
                             SelectedItem="{Binding RemoteFiles.SelectedFile}"
                             AutoGenerateColumns="False"
                             GridLinesVisibility="None"
                             HeadersVisibility="Column"
                             SelectionMode="Single"
                             CanUserAddRows="False"
                             CanUserDeleteRows="False"
                             CanUserReorderColumns="False"
                             CanUserResizeRows="False"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.CanContentScroll="False"
                             IsEnabled="{Binding RemoteFiles.IsLoading, Converter={StaticResource InverseBooleanConverter}}"
                             Opacity="{Binding RemoteFiles.IsLoading, Converter={StaticResource BooleanToOpacityConverter}}"
                             Background="#1E1E1E"
                             BorderThickness="0"
                             RowHeight="24"
                             FontSize="13"
                             Margin="0,0,0,4" ColumnHeaderHeight="30">
                        
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="#2D2D30"/>
                                <Setter Property="Foreground" Value="#F0F0F0"/>
                                <Setter Property="BorderBrush" Value="#3E3E42"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="Padding" Value="8,6"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#F0F0F0"/>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <!-- Default state for all rows -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="{x:Null}">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                    
                                    <!-- Active items -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter Property="Background" Value="#2D4A2D"/>
                                    </DataTrigger>
                                    
                                    <!-- Inactive items -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="False">
                                        <Setter Property="Background" Value="#4A2D2D"/>
                                        <Setter Property="Opacity" Value="0.7"/>
                                    </DataTrigger>
                                    
                                    <!-- Selection - higher priority than IsActive -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#094771"/>
                                        <Setter Property="BorderBrush" Value="#007ACC"/>
                                        <Setter Property="Opacity" Value="1.0"/>
                                    </Trigger>
                                    
                                    <!-- Hover effect -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#2A2D2E"/>
                                        <Setter Property="Opacity" Value="1.0"/>
                                    </Trigger>
                                    
                                    <!-- Selected + Hover -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#1177BB"/>
                                        <Setter Property="BorderBrush" Value="#007ACC"/>
                                        <Setter Property="Opacity" Value="1.0"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        
                        <DataGrid.ContextMenu>
                            <MultiBinding Converter="{StaticResource ContextMenuVisibilityConverter}" 
                                          ConverterParameter="{StaticResource RemoteFileContextMenu}">
                                <Binding Path="NavigationContext.SelectedBucket"/>
                            </MultiBinding>
                        </DataGrid.ContextMenu>

                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                         Command="{Binding RemoteFiles.NavigateToCommand}"
                                         CommandParameter="{Binding RemoteFiles.SelectedFile}"/>
                        </DataGrid.InputBindings>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            
                            <DataGridTextColumn Header="Size" Binding="{Binding DisplaySize}" Width="80" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            
                            <DataGridTemplateColumn Header="C" Width="30">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" Margin="8,0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCompressed}" Value="True">
                                                            <Setter Property="Text" Value="✓"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsCompressed}" Value="False">
                                                            <Setter Property="Text" Value=""/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <DataGridTextColumn Header="Modified" Binding="{Binding LastModified, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='yyyy-MM-dd HH:mm'}" Width="130" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="8,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
        </Grid>

        <!-- Action Buttons -->
        <Border Grid.Row="3" Background="#252526" BorderBrush="#3E3E42" BorderThickness="0,1,0,0">
            <StackPanel Orientation="Horizontal" 
                       HorizontalAlignment="Right" 
                       Margin="20,16">
                <Button Command="{Binding ViewChangesCommand}" 
                        Style="{StaticResource ModernButtonStyle}"
                        Margin="0,0,12,0">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Assets/Icons/bullet-list.png" Width="16" Height="16" Margin="0,0,8,0"/>
                        <TextBlock Text="{Binding ViewChangesButtonText}" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding DiscardChangesCommand}" 
                        Style="{StaticResource ModernButtonStyle}"
                        Background="#4A2D2D"
                        Foreground="#FF6B6B"
                        BorderBrush="#6B3A3A"
                        Margin="0,0,12,0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Assets/Icons/recycle.png" Width="16" Height="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Discard" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#6B3A3A"/>
                                    <Setter Property="BorderBrush" Value="#8B4A4A"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#8B4A4A"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#252526"/>
                                    <Setter Property="Foreground" Value="#6A6A6A"/>
                                    <Setter Property="BorderBrush" Value="#333"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Command="{Binding ApplyChangesCommand}" 
                        Style="{StaticResource ModernButtonStyle}"
                        Background="#2D4A2D"
                        Foreground="#4CAF50"
                        BorderBrush="#3A5A3A">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Assets/Icons/check.png" Width="16" Height="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Apply Changes" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"
                                                Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#3A5A3A"/>
                                    <Setter Property="BorderBrush" Value="#4A6A4A"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#4A6A4A"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#252526"/>
                                    <Setter Property="Foreground" Value="#6A6A6A"/>
                                    <Setter Property="BorderBrush" Value="#333"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </Border>

        <!-- Status Bar -->
        <Border Grid.Row="4" Background="#252526" BorderBrush="#3E3E42" BorderThickness="0,1,0,0">
            <Grid Height="36" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0" 
                          Text="{Binding StatusMessage}" 
                          VerticalAlignment="Center"
                          FontSize="13"
                          Foreground="#F0F0F0"/>
                
                <ProgressBar Grid.Column="1" 
                            Value="{Binding ProgressValue}" 
                            Maximum="100" 
                            Height="6" 
                            VerticalAlignment="Center"
                            Background="#3E3E42"
                            Foreground="#F0F0F0"
                            BorderThickness="0"
                            Visibility="Visible">
                    <ProgressBar.Template>
                        <ControlTemplate TargetType="ProgressBar">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="3"
                                    ClipToBounds="True">
                                <Grid>
                                    <Rectangle Name="PART_Track" />
                                    <Grid Name="PART_Indicator" 
                                          ClipToBounds="True"
                                          HorizontalAlignment="Left">
                                        <Rectangle Name="Indicator" 
                                                   Fill="{TemplateBinding Foreground}"
                                                   RadiusX="3" RadiusY="3"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </ProgressBar.Template>
                </ProgressBar>
            </Grid>
        </Border>
    </Grid>
</Window>
